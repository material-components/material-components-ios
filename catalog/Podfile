workspace 'MDCCatalog.xcworkspace'
project 'MDCCatalog.xcodeproj'

target "MDCCatalog" do
  project 'MDCCatalog.xcodeproj'
  pod 'MaterialComponentsCatalog', :path => '../'
  pod 'MaterialComponents', :path => '../'
  pod 'CatalogByConvention'

  use_frameworks!
end

target "MDCUnitTests" do
  project 'MDCUnitTests.xcodeproj'
  pod 'MaterialComponentsUnitTests', :path => '../'
  pod 'MaterialComponents', :path => '../'
  pod 'CatalogByConvention'

  use_frameworks!
end

target "MDCActionExtension" do
  project 'MDCCatalog.xcodeproj'
  pod 'MaterialComponentsCatalog', :path => '../'
  pod 'MaterialComponents', :path => '../'
  pod 'CatalogByConvention'

  use_frameworks!
end

# EarlGrey configuration
PROJECT_NAME = 'MDCCatalog'
TEST_TARGET = 'MDCInteractionTests'
SCHEME_FILE = 'MDCInteractionTests.xcscheme'

target TEST_TARGET do
  project PROJECT_NAME
  inherit! :search_paths
  pod 'EarlGrey'
end

post_install do |installer|
  pod_dir = File.dirname(installer.pods_project.path)

  # Inject our specific warning flags into the .xcconfig files.
  mdc_xcconfigs = [
    "#{pod_dir}/Target Support Files/MaterialComponents/MaterialComponents.xcconfig",
    "#{pod_dir}/Target Support Files/Pods-MDCCatalog/Pods-MDCCatalog.debug.xcconfig",
    "#{pod_dir}/Target Support Files/Pods-MDCCatalog/Pods-MDCCatalog.release.xcconfig",
    "#{pod_dir}/Target Support Files/Pods-MDCUnitTests/Pods-MDCUnitTests.debug.xcconfig",
    "#{pod_dir}/Target Support Files/Pods-MDCUnitTests/Pods-MDCUnitTests.release.xcconfig",
  ]
  
  # Note the path is relative to the xcconfig file being modified.
  # https://pewpewthespells.com/blog/xcconfig_guide.html
  mdc_xcconfigs.each do |mdc_xcconfig|
    new_xcconfig = File.read(mdc_xcconfig)
    new_xcconfig << "\n#include \"../../../MaterialComponentsWarnings.xcconfig\""
    File.write(mdc_xcconfig, new_xcconfig)
  end

  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['SWIFT_VERSION'] = '2.3'
    end
  end

  # EarlGrey configuration
  require 'earlgrey'
  configure_for_earlgrey(installer, PROJECT_NAME, TEST_TARGET, SCHEME_FILE)
end
