#!/bin/bash
#
# Copyright 2018-present The Material Components for iOS Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Fail on any error.
set -e

version_as_number() {
  padded_version="${1%.}" # Strip any trailing dots
  # Pad with .0 until we get a M.m.p version string.
  while [ $(grep -o "\." <<< "$padded_version" | wc -l) -lt "2" ]; do
    padded_version=${padded_version}.0
  done
  echo "${padded_version//.}"
}

if [ -n "$KOKORO_BUILD_NUMBER" ]; then
  # Move into our cloned repo
  cd github/repo

  # Install sourcekitten, a dependency of the apidiff tool
  brew install sourcekitten
fi

BUILDS_TMP_PATH=$(mktemp -d)
SEEN_XCODES_FILE_PATH="$BUILDS_TMP_PATH/seen_xcodes"
touch "$SEEN_XCODES_FILE_PATH"
xcodes=$(ls /Applications/ | grep "Xcode")
for xcode_path in $xcodes; do
  xcode_version=$(cat /Applications/$xcode_path/Contents/version.plist \
    | grep "CFBundleShortVersionString" -A1 \
    | grep string \
    | cut -d'>' -f2 \
    | cut -d'<' -f1)
  xcode_version_as_number="$(version_as_number $xcode_version)"

  # Ignore duplicate Xcode installations
  if grep -xq "$xcode_version_as_number" "$SEEN_XCODES_FILE_PATH"; then
    continue
  fi

  echo "$xcode_version_as_number" >> "$SEEN_XCODES_FILE_PATH"

  if [ "$xcode_version_as_number" -ne "$(version_as_number $XCODE_VERSION)" ]; then
    continue
  fi

  sudo xcode-select --switch /Applications/$xcode_path/Contents/Developer
  xcodebuild -version

  # Resolves the following crash when switching Xcode versions:
  # "Failed to locate a valid instance of CoreSimulatorService in the bootstrap"
  launchctl remove com.apple.CoreSimulator.CoreSimulatorService || true
  
  base_sha=$(git merge-base origin/develop HEAD)

  ./scripts/release apidiff "$base_sha" | tee "$BUILDS_TMP_PATH/api_diff"
  changelog_path=$(cat "$BUILDS_TMP_PATH/api_diff" | grep "Changelog=" | cut -d'=' -f2)
  error_path=$(cat "$BUILDS_TMP_PATH/api_diff" | grep "Errors=" | cut -d'=' -f2)

  if [ -f "$changelog_path" ]; then
    cat "$changelog_path"
  fi
  if [ -f "$error_path" ]; then
    nested_error_path=$(cat "$error_path" | grep "stderr output is available in" | cut -d' ' -f6)
    if [ -f "$nested_error_path" ]; then
      cat "$nested_error_path"
    fi
  fi
done

